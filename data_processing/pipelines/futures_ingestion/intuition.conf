logging {
  max_file_size = 20485760
  backup_count = 100
}
run_description {
  git_revision = ${?GIT_REVISION}
}
ExecutionInstructions {
  DEFAULT_TIME_DELTA_IN_DAYS = 2
}
DCMTradingActor {
  topics_configuration {
    REGULAR_TOPIC {
      TOPIC_INDEX = 1
      TOPIC_SUFFIX = |
    }
    EMERGENCY_TOPIC {
      TOPIC_INDEX = 2
      TOPIC_SUFFIX = |em
    }
    DATA_UPDATE_TOPIC {
      TOPIC_INDEX = 3
      TOPIC_SUFFIX = |data
    }
  }
}
OrderFactoryIB {
  VwapParameters {
    maxPctVol = 0.05
    minimumTimeBlock = 3T
    allowPastEndTime = 0
    noTakeLiq = 0
  }
  LimitParameters {
    proportional_adjustment = 0.0008
    absolute_adjustment = 0.01
  }
  FA_GROUP = "PairsTrading"
  FA_METHOD = "EqualQuantity"
  allow_orders_outside_rth = false
  use_fa_allocation = true
  AllOrNoneParameters {
    order_type = "MKT"
  }
  hedge_combo_min_share_amount = 20
}
ibpy {
  BrokerConnectionIB_client_Id = 999
  TWS_port = 7496
  BrokerConnectionIB_nextValidId_waitout_in_secs = 10
  IBConnection_time_limit_to_connect_in_seconds = 60
}
IBControllerWrapper {
  IBController_command = ${?HOME}/IBController/IBControllerStart.sh
  IBController_process_name = DisplayBannerAndLaunch.sh
  IBController_waitout_sleep_time_in_secs = 30
  host = localhost
  port = 7496
}

DataProvider.YahooQuotesDataProvider {
  endpoint = "http://download.finance.yahoo.com/d/quotes.csv"
}
DataProvider.InteractiveBrokersEquityDataProvider {
  DataProviderFromIB_client_Id = 888
}
#DataProvider.LiveDragonfishDataProvider {
	#endpoint = "http://52.36.34.97"
#}
DataProvider.RedshiftRavenPackDataProvider {
  redshift_user = dcm_dev
  redshift_user = ${?REDSHIFT_USER}
  redshift_pwd = pwd
  redshift_pwd = ${?REDSHIFT_PWD}
  redshift_endpoint = marketdata-test.cq0v4ljf3cuw.us-east-1.redshift.amazonaws.com
  redshift_port = 5439
  db_name = dev
  redshift_credentials = ${DataProvider.RedshiftRavenPackDataProvider.redshift_user}:${DataProvider.RedshiftRavenPackDataProvider.redshift_pwd}
  redshift_service = ${DataProvider.RedshiftRavenPackDataProvider.redshift_endpoint}:${DataProvider.RedshiftRavenPackDataProvider.redshift_port}
  redshift_uri = "redshift+psycopg2://"${DataProvider.RedshiftRavenPackDataProvider.redshift_credentials}@${DataProvider.RedshiftRavenPackDataProvider.redshift_service}/${DataProvider.RedshiftRavenPackDataProvider.db_name}
}

# !!! PLEASE DO NOT ENABLE DATA PROVIDER HERE! SET THEM UP IN YOUR PERSONAL .intuition.conf FILE. THESE ARE HERE
# FOR REFERENCE

#DataProvider.HistoricalEquityDataProvider {
  #redshift_uri = ${DataProvider.RedshiftRavenPackDataProvider.redshift_uri}
#}

#DataProvider.H5HistoricalEquityDataProvider {
	#full_file_path = "./h5_historical_equity/historical_equities.h5",
	#cob_field = "Date",
	#df_name = "dataframe",
	#create_price_count = True
#}
#DataProvider.RedshiftDragonfishDataProvider {
  #redshift_uri = ${DataProvider.RedshiftRavenPackDataProvider.redshift_uri}
#}

#DataProvider.H5RavenpackDataProvider {
	#full_file_path = "./h5_historical_olmar/historical_ravenpack.h5",
	#cob_field = "Date",
	#df_name = "dataframe",
#}
#DataProvider.H5DragonfishDataProvider {
	#full_file_path = "./h5_dragonfish/dragonfish.h5",
	#cob_field = "Date",
	#df_name = "dataframe"
#}

DataProvider.RealtimeRavenPackDataProvider {
  kafka_bootstrap = ${KAFKA_BOOTSTRAP}
  sasl_plain_username = ${KAFKA_SASL_PLAIN_USERNAME}
  sasl_plain_password = ${KAFKA_SASL_PLAIN_PASSWORD}
  ravenpack_service_host = ravenpack-service
  ravenpack_service_port = 8088
  ravenpack_service_admin_port = 9022
  ravenpack_service_host = ${?RAVENPACK_SERVICE_HOST}
  ravenpack_service_port = ${?RAVENPACK_SERVICE_PORT}
  ravenpack_service_admin_port = ${?RAVENPACK_SERVICE_ADMIN_PORT}
  ravenpack_service_url = "http://"${DataProvider.RealtimeRavenPackDataProvider.ravenpack_service_host}:${DataProvider.RealtimeRavenPackDataProvider.ravenpack_service_port}/subscriptions
  ravenpack_service_healthcheck_url = "http://"${DataProvider.RealtimeRavenPackDataProvider.ravenpack_service_host}:${DataProvider.RealtimeRavenPackDataProvider.ravenpack_service_admin_port}/admin/ping
}
BrokerConnectionIB {
  # Live Trading
  # paper DU229046
  accounts = [U1814262]
  multi_thread_order_updates = true
  thread_time_interval_between_order_updates_in_secs = 10
  sleep_time_interval_for_manual_order_updates_in_sec = null
  waiting_time_for_positions_of_reconciliation_in_seconds = 60
  waiting_time_for_contract_details_request_in_seconds = 600
  waiting_time_for_exec_details_of_reconciliation_in_seconds = 20
  waiting_time_for_global_cancel_of_reconciliation_in_seconds = 20
  commission_per_share_amount_for_longs = 0.005
  commission_per_share_amount_for_shorts = 0.0075
  min_commission_per_order = 1.0
}
DragonfishTrader {
  algorithm = Greeneye # One of Greeneye, Mooneye, Blueeye, Longfin, Shortfin, Triggerfish

}
ExecutionCoordinator {
  execution_styles_to_expert_map {
	OrderedAllOrNone = OrderedAllOrNoneWithCancellationExecutionExpert
	RebalanceVWAP = VWAPExecutionExpert
	HedgeCombo = NonGuaranteedComboLimitExecutionExpert
  }
  default_execution_style = RebalanceVWAP
}

IBControllerWrapper {
   IBController_command = ${?IB_CONTROLLER_START_PATH}
   IBController_process_name = DisplayBannerAndLaunch.sh
   IBController_waitout_sleep_time_in_secs = 30
   host = localhost
   port = 7496
}