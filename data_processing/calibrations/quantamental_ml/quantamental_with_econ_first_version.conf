Flow {
    DataPull = [
		"S3SecurityMasterReader"
		"S3EconTransformationReader"
		"YahooDailyPriceReader"
		"DownloadEconomicData"
		"TimelinePermutator"
		"S3RussellComponentReader"
		"DummyMergedData"
	]
	FilterDatesSingleNames = [
		"FilterMonthlyDatesFullPopulation"
		"CreateMonthlyDataSingleNames"
	]
	Transformation = [
		"CreateYahooDailyPriceRolling"
		"TransformEconomicData"
		"CreateIndustryAverage"
	]
	MergeEcon = [
		"QuantamentalMergeEconIndustry"
	]
	Standarization = [
		"FactorStandardizationFullPopulation"
		"AddFoldIdToNormalziedData"
	]
	IntermediateModelTraining = [
		"TrainIntermediateModels"
	]
	MergeSignal = [
		"QuantamentalMergeSignals"
	]
	PopulationSplit = [
		"FilterRussell1000Augmented"
	]
	Residualization = [
		"FactorNeutralizationForStacking"
	]
	ResidualizedStandardization = [
		"FactorStandardizationNeutralizedForStacking"
	]
	AddFinalFoldId = [
		"AddFoldIdToNormalziedDataGrowthValuePortfolio"
	]
	FinalModelTraining = [
		"RollingModelEstimation"
	]
	GenerateTraderInstructions = [
		"ConvertSignalsToInstructionFile"
	]
}
FlowConfiguration {
    snapshot_location = "C:/DCM/temp/pipeline_tests/new_data_201910"
    base_configuration_filepath = "../configuration/market_view_calibration_pipeline.conf"
    base_configuration_overrides {}
    use_existing_cache_for_stages = [*]
        calibration_mode_overrides {
        }

        test_mode_overrides {
            FlowConfiguration {
                    snapshot_location = "./test/test_run_cache"
                }
                StepsConfiguration {
                
                }
        }

}
StepsConfiguration{
	S3SecurityMasterReader{
		bucket = "dcm-data-temp"
		key =  "jack/security_master_final.csv"
	}
	S3EconTransformationReader {
		sector_etfs = ["SPY", "MDY", "EWG", "EWH", "EWJ", "EWW", "EWS", "EWU"]
		bucket = "dcm-data-temp"
		key = "jack/econ_transform_definitions.csv"
	}
	YahooDailyPriceReader{
		sector_etfs = ["SPY", "MDY", "EWG", "EWH", "EWJ", "EWW", "EWS", "EWU"]
		start_date = "1997-01-01"
		end_date = "2019-10-05" 
	}
	DownloadEconomicData{
		start_date = "1997-01-01"
		sector_etfs = ["SPY", "MDY", "EWG", "EWH", "EWJ", "EWW", "EWS", "EWU"]
	}
    TimelinePermutator {
        permutation_enabled = False
                timeline_segmenter_function_names = null 
                random_seed = 12345
                permute_day_at_lowest_segment = True
	}
	S3RussellComponentReader {
		bucket = "dcm-data-temp"
		r3k_key = "jack/r3k.csv" 
		r1k_key = "jack/r1k.csv"
	}
	DummyMergedData{
		file_name_location = "D:/DCM/TIAA weight/pipeline_tests/DerivedSimplePriceFeatureProcessing.h5"
		key = "/pandas/merged_data"
	}
	FilterMonthlyDatesFullPopulation{
		mode = "bme"
		start_date = "2000-03-15"
		end_date = "2019-08-30" 
	}
	CreateMonthlyDataSingleNames{
	}
	CreateYahooDailyPriceRolling{
		rolling_interval = 5
	}
	TransformEconomicData {
		mode = "bme"
		start_date = "1997-06-30"
		end_date = "2019-10-05" 
	}
	CreateIndustryAverage{
		industry_cols = ["volatility_126", "PPO_12_26", "PPO_21_126", "netmargin", "macd_diff", "pe", "debt2equity", "bm", "ret_63B", "ebitda_to_ev", "divyield"]
		sector_cols = ["volatility_126", "PPO_21_126", "macd_diff", "divyield", "bm"]
	}
	QuantamentalMergeEconIndustry{
		industry_cols = ["volatility_126", "PPO_12_26", "PPO_21_126", "netmargin", "macd_diff", "pe", "debt2equity", "bm", "ret_63B", "ebitda_to_ev", "divyield"]
		security_master_cols = ["dcm_security_id", "Sector", "IndustryGroup"]
		sector_cols = ["volatility_126", "PPO_21_126", "macd_diff", "divyield", "bm"]
		key_sectors = ["Energy", "Information Technology", "Financials", "Utilities", "Consumer Discretionary", "Industrials", "Consumer Staples"],
		econ_cols = ["RETAILx", "USTRADE", "SPY_close", "bm_Financials", "T10YFFM", "T5YFFM", "CPITRNSL", "OILPRICEx", "EWJ_volume", "HWI", "CUSR0000SA0L2", "CUSR0000SA0L5", "T1YFFM", "DNDGRG3M086SBEA", "AAAFFM", "RPI", "macd_diff_ConsumerStaples", "EXUSUKx", "COMPAPFFx", "PPO_21_126_Industrials", "PPO_21_126_Financials", "CP3Mx", "divyield_ConsumerStaples", "VXOCLSx", "GS10", "bm_Utilities", "EWG_close", "CUSR0000SAC", "GS5", "divyield_Industrials", "WPSID62", "IPDCONGD", "PPO_21_126_InformationTechnology", "PPO_21_126_Energy", "PPO_21_126_ConsumerDiscretionary"]
		start_date = "1997-12-15"
		end_date = "2019-09-20"
		normalize_econ = False
	}
	FactorStandardizationFullPopulation {
		all_features = True
		exclude_from_standardization = ["fq", "divyield_Industrials", "PPO_21_126_ConsumerDiscretionary", "DNDGRG3M086SBEA", "EXUSUKx", "GS10", "IPDCONGD", "T5YFFM", 
		                                "USTRADE", "CUSR0000SA0L2", "RETAILx", "bm_Financials", "OILPRICEx", "T10YFFM", "CPITRNSL", "CP3Mx", "CUSR0000SAC", "EWJ_volume", 
						"SPY_close", "VXOCLSx", "PPO_21_126_InformationTechnology", "WPSID62", "GS5", "COMPAPFFx", "CUSR0000SA0L5", "T1YFFM", "PPO_21_126_Energy", 
						"bm_Utilities", "PPO_21_126_Financials", "HWI", "RPI", "PPO_21_126_Industrials", "divyield_ConsumerStaples", "EWG_close", "macd_diff_ConsumerStaples", 
						"AAAFFM", "fold_id", "Sector", "IndustryGroup"]
		target_columns= ["future_asset_growth_qoq", "future_ret_10B", "future_ret_1B", "future_ret_21B", "future_ret_42B", "future_ret_5B", "future_revenue_growth_qoq"]
		suffixes_to_exclude = ["_std"]
	}
	AddFoldIdToNormalziedData{
		cut_dates = ["2003-12-31", "2007-09-28", "2011-06-30", "2014-12-31", "2017-11-30"]
	}
	TrainIntermediateModels {
		y_col = "future_ret_21B_std"
		X_cols = ["EWG_close", "HWI", "IPDCONGD", "EXUSUKx", "COMPAPFFx", "GS5", "CUSR0000SAC", "T5YFFM", "PPO_21_126_InformationTechnology", "macd_diff_ConsumerStaples", "PPO_21_126_Industrials", "VXOCLSx", "PPO_21_126_Energy", "T1YFFM", "WPSID62", "CUSR0000SA0L2", "EWJ_volume", "PPO_21_126_ConsumerDiscretionary", "OILPRICEx", "GS10", "RPI", "CPITRNSL", "divyield_ConsumerStaples", "bm_Financials", "USTRADE", "T10YFFM", "divyield_Industrials", "AAAFFM", "RETAILx", "bm_Utilities", "SPY_close", "log_mktcap", "volatility_126", "momentum", "bm", "PPO_12_26", "SPY_beta", "log_dollar_volume", "fcf_yield"]
		return_col = "future_ret_21B"
		ensemble_weights = {"enet": 0.03333333333333333, "et": 0.3, "gbm": 0.2, "lasso": 0.03333333333333333, "ols": 0.03333333333333333, "rf": 0.4}
		load_from_s3 = False
		bucket = "dcm-data-temp"
		key_base = "saved_econ_models"
	}
	QuantamentalMergeSignals {
		drop_column = "future_ret_21B"
	}
	FilterRussell1000Augmented {
		start_date = "2009-03-15"
		end_date = "2019-08-30"
	}
	FactorNeutralizationForStacking {
		factors = ["SPY_beta", "log_mktcap", "ret_5B", "ret_21B", "volatility_63", "volatility_126", "momentum"]
		exclusion_list = ["fq", "divyield_Industrials", "PPO_21_126_ConsumerDiscretionary", "DNDGRG3M086SBEA", "EXUSUKx",
				  "GS10", "IPDCONGD", "T5YFFM", "USTRADE", "CUSR0000SA0L2", "RETAILx", "bm_Financials", "OILPRICEx",
				  "T10YFFM", "CPITRNSL", "CP3Mx", "CUSR0000SAC", "EWJ_volume", "SPY_close", "VXOCLSx",
				  "PPO_21_126_InformationTechnology",  "WPSID62", "GS5", "COMPAPFFx", "CUSR0000SA0L5",
				  "T1YFFM", "PPO_21_126_Energy", "bm_Utilities", "PPO_21_126_Financials", "HWI", "RPI",
				  "PPO_21_126_Industrials",  "divyield_ConsumerStaples", "EWG_close", "macd_diff_ConsumerStaples",
				  "AAAFFM", "ols", "lasso", "enet", "et", "rf", "gbm", "ensemble"]
	}
	FactorStandardizationNeutralizedForStacking {
		all_features = True
		exclude_from_standardization = ["fq", "divyield_Industrials", "PPO_21_126_ConsumerDiscretionary", "DNDGRG3M086SBEA", "EXUSUKx", "GS10", "IPDCONGD", "T5YFFM", 
		                                "USTRADE", "CUSR0000SA0L2", "RETAILx", "bm_Financials", "OILPRICEx", "T10YFFM", "CPITRNSL", "CP3Mx", "CUSR0000SAC", "EWJ_volume", 
						"SPY_close", "VXOCLSx", "PPO_21_126_InformationTechnology", "WPSID62", "GS5", "COMPAPFFx", "CUSR0000SA0L5", "T1YFFM", "PPO_21_126_Energy", 
						"bm_Utilities", "PPO_21_126_Financials", "HWI", "RPI", "PPO_21_126_Industrials", "divyield_ConsumerStaples", "EWG_close", "macd_diff_ConsumerStaples", 
						"AAAFFM", "fold_id", "Sector", "IndustryGroup"]
		target_columns= ["future_asset_growth_qoq", "future_ret_10B", "future_ret_1B", "future_ret_21B", "future_ret_42B", "future_ret_5B", "future_revenue_growth_qoq"]
		suffixes_to_exclude = ["_std"]
	}
	AddFoldIdToNormalziedDataGrowthValuePortfolio {
		cut_dates = ["2010-12-31", "2012-09-28", "2014-06-30", "2016-03-31", "2017-12-29"]
	}
	RollingModelEstimation {
		date_combinations = [[2017, 12], [2018, 3], [2018, 6], [2018, 9], [2018, 12], [2019, 3], [2019, 6]]
		ensemble_weights = {"enet": 0.03333333333333333, "et": 0.3, "gbm": 0.2, "lasso": 0.03333333333333333, "ols": 0.03333333333333333, "rf": 0.4}
	}
	ConvertSignalsToInstructionFile {
		trader_long_short_type = "Long_Short",
		number_of_quantiles = 5,
		actorID = "Quantamental_Trader",
		rebalancing_frequency = "BMS",
		rebalancing_time = "09:31:00"
	}
}