Flow {
    DataPull = [
        "S3SecurityMasterReader"
        "TimelinePermutator"
        "SQLReaderPriceData"
        "SQLReaderDailyIndexData"
        "SQLReaderETFInformation"
    ]
    DerivedData = [
        "CalibrationDatesBasketPairs"
        "CalculateTechnicalIndicator"
        "CalculateStochasticIndicator"
        "CalculateDollarVolume"
        "ComputeBeta"
        "CalculatePCACoeff"
        "CreateLiquidTradeList"
        "CalculateOvernightReturn"
    ]
    Clustering = [
        "GenerateKMeansClusters"
    ]
    Lasso = [
        "GenerateGraphicalLassoGroups"
    ]
    LassoBenchmark = [
        "GenerateGraphicalLassoBenchmark"
    ]
    Calibration = [
        "PortfolioMeanReversionTraderCalibration"
        "FilterCalibrationConcentrationLimits"
    ]
}
FlowConfiguration {
    snapshot_location = "C:/DCM/temp/pipeline_tests/bp_long_history"
    base_configuration_filepath = "../configuration/market_view_calibration_pipeline.conf"
    base_configuration_overrides {}
    use_existing_cache_for_stages = [*]
        calibration_mode_overrides {
            FlowConfiguration {
                    snapshot_location = "C:/DCM/temp/pipeline_tests/basket_pairs_new"
                }
                StepsConfiguration {
                    PortfolioMeanReversionTraderCalibration : {
                        output_dir = "s3://dcm-production-processes/calibrations/basket_pair_trading"
                        file_suffix = basket_pair_trader.csv
                        ignore_calibration_timeline = False
                        calibration_date_offset = "21B"
                        calibration_anchor_date = "2018-12-17"
                     }
                    CalibrationDatesBasketPairs {
                            cache_file = "../configuration/calibration_dates_compare.csv"
                            target_dt = null
                            intervals_start_dt = null
                            intervals_end_dt = null
                            force_recalculation = True
                            save_intervals_to = null
                        }
                }
        }
        test_mode_overrides {
            FlowConfiguration {
                    snapshot_location =  "./test/test_run_cache"
                    use_existing_cache_for_stages = [*]	
                }
                StepsConfiguration {
                    CalibrationDatesBasketPairs {
                        cache_file = "../configuration/calibration_dates_compare.csv"
                        target_dt = "2018-11-30"
                        intervals_start_dt = "2018-09-18"
                        intervals_end_dt = "2018-11-30"
                        force_recalculation = True
                        save_intervals_to = null
                    }
                    GenerateKMeansClusters: {
                        n_clusters = 3 
                        method = auto
                        feature_list = [SPY_beta, VWO_beta, TLT_beta, GLD_beta, GSG_beta, PC_1_beta, PC_2_beta, PC_3_beta]
                    }
                    GenerateGraphicalLassoGroups: {
                        lookback = 189
                        offset_unit = B
                        price_column = close
                        normalize = True
                        dropna_pctg = 0.15
                        min_group_size = 5
                        max_group_size = 24 
                        shrinkage = 0.15
                        use_cross_validation = False
                        alpha = 0.01
                    }
                    GenerateGraphicalLassoBenchmark: {
                        lookback = 189
                        offset_unit = B
                        price_column = close
                        normalize = True
                        dropna_pctg = 0.15
                        min_group_size = 5
                        max_group_size = 24 
                        shrinkage = 0.15
                        alpha = 0.01
                        use_cross_validation = true
                    }
                    FilterCalibrationConcentrationLimits {
                        output_dir = "D:/DCM/engine_results/pairs_trading_live_20181218"
                        file_suffix = "basket_pair_trader_filtered.csv"
                        ignore_calibration_timeline = True
                        calibration_date_offset = null
                        calibration_anchor_date = null
                        entry_tol = 0.0
                        exit_tol = 0.0
                        filter_start_dt = "2018-10-01"
                        filter_end_dt = null
                        singlename_limit = 250000.0
                        sector_limit = 3000000.0
                        weighting = null
                    }
                }
        }
}

StepsConfiguration {
    S3SecurityMasterReader{
        bucket = "dcm-data-temp"
        key =  "jack/security_master_final.csv"
    }
    TimelinePermutator {
        permute_day_at_lowest_segment = true
        random_seed = 12345
        permutation_enabled = false
        timeline_segmenter_function_names = null
    }
    SQLReaderPriceData {
        table_name = "daily_equity_prices"
        price_limit_filters = {open:[0, 1000000], close:[0, 100000]}
    }
    SQLReaderDailyIndexData {
        table_name = "daily_index"
        index_names = ["SPX", "PPUT", "CMBO", "BFLY", "RXM", "VIX", "VXST", "VXMT", "VIX3M"]
    }
    SQLReaderETFInformation {}
    CalibrationDatesBasketPairs {
        cache_file = "../configuration/calibration_dates_compare.csv"
        target_dt = null
        intervals_start_dt = "2007-01-01"
        intervals_end_dt = null
        force_recalculation = True
        save_intervals_to = null
    }
    CalculateTechnicalIndicator {
        technical_indicator = price_oscillator,
        technical_indicator_params = {nslow: 26, nfast: 12},
        price_column = close,
        calculate_indicator_ranking =True
    }
    CalculateStochasticIndicator {
        technical_indicator = stoch_k
        technical_indicator_params = {offset: 14}
        smoothing_period = 3
        smoothing_period_2 = 3
        price_column = close
    }
    CalculateDollarVolume {
        lookback_periods = 10
    }
    ComputeBeta: {
        benchmark_names = ["SPY", "VWO", "TLT", "GSG", "GLD"]
        beta_lookback = 63
        offset_unit = B
        price_column = close
        dropna_pctg = 0.15
        use_robust = False
        epsilon = 1.35
        alpha = 0.0001
        fit_intercept = False
    }
    CalculatePCACoeff: {
        n_components = 5
        lookback = 252
        offset_unit = B
        price_column = close
        normalize = True
        dropna_pctg = 0.15
        method = randomized
    }
    CreateLiquidTradeList: {
        adv_threshold = 20000000.0
        price_threshold = 8.0
        #exclusion_list = [DUST, JDST, LABD]
        #exclusion_list = [ERX, DGAZ, JDST, JNUG, LABD, NUGT, TVIX, UGAZ, USLV, UWT, VXX, VIXY]
        exclusion_list = []
    }
    CalculateOvernightReturn {}
    GenerateKMeansClusters: {
        #n_clusters = 9
        n_clusters = 12 #13
        method = auto
        feature_list = [SPY_beta, VWO_beta, TLT_beta, GLD_beta, GSG_beta, PC_1_beta, PC_2_beta, PC_3_beta]
        #feature_list = [SPY_beta, TLT_beta, GLD_beta, GSG_beta, PC_1_beta, PC_2_beta]
    }
    GenerateGraphicalLassoGroups: {
        lookback = 189
        offset_unit = B
        price_column = close
        normalize = True
        dropna_pctg = 0.15
        #min_group_size = 5
        #max_group_size = 16
        min_group_size = 6
        max_group_size = 24 #18
        shrinkage = 0.15
        use_cross_validation = False
        alpha = 0.01
    }
    GenerateGraphicalLassoBenchmark: {
        lookback = 189
        offset_unit = B
        price_column = close
        normalize = True
        dropna_pctg = 0.15
        #min_group_size = 5
        #max_group_size = 16
        min_group_size = 5
        max_group_size = 24 #18
        shrinkage = 0.15
        alpha = 0.01
        use_cross_validation = true
    }
    PortfolioMeanReversionTraderCalibration: {
        first_daily_check_up_time = "09:33:00"
        stoch_d_params = {offset: 14, window: 3}
        entry_threshold = -50.0
        #exit_threshold = 10
        #time_limit = "21B"
        exit_threshold = 0.0
        time_limit = "20B"
        indicator_check_frequency = "00:05:00"
        stop_limits_pct = "(-0.14, 10.0)"
        total_funding = 18000000.0
        fundingRequestsAmount = 450000.0
        funding_buffer = 150000.0
        proportion = 1.0/3
        valid_until_offset = "20B"
        output_dir = "D:/DCM/engine_results/pairs_trading_new_code"
        file_suffix = "basket_pair_trader_new_historical.csv" # Remove test
        drop_duplicates = True
        add_supervisor = True
        ignore_calibration_timeline = True
        calibration_date_offset = null
        calibration_anchor_date = null
    }
    FilterCalibrationConcentrationLimits {
        output_dir = "D:/DCM/engine_results/pairs_trading_live_20181218"
        file_suffix = "basket_pair_trader_filtered.csv"
        ignore_calibration_timeline = True
        calibration_date_offset = null
        calibration_anchor_date = null
        entry_tol = 0.0
        exit_tol = 0.0
        filter_start_dt = "2019-01-02"
        filter_end_dt = null
        singlename_limit = 500000.0
        sector_limit = 3000000.0
        weighting = null
    }
}