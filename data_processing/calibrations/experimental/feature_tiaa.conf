Flow {
    DataPull = [
        "S3SecurityMasterReader"
        "S3IndustryMappingReader"
        "S3RawQuandlDataReader"
        "SQLMinuteToDailyEquityPrices"
        "TimelinePermutator"
        "CalibrationDatesJump"
    ]
    DerivedFundamentalDataProcessing = [
        "QuandlDataCleanup"
        "CalculateDerivedQuandlFeatures"
        "CalculateTargetReturns"
    ]
    DerivedTechnicalDataProcessing = [
        "CalculateTaLibSTOCHRSIMultiParam"
        "CalculateVolatilityMultiParam"
        "CalculateTaLibWILLRMultiParam"
        "CalculateTaLibPPOMultiParam"
        "CalculateTaLibADXMultiParam"
    ]
    #DerivedSimplePriceFeatureProcessing = [
        #"ComputeBeta"
        #"CalculateMACD"
        #"CalcualteCorrelation"
        #"CalculateDollarVolume"
        #"CalculateOvernightReturn"
        #"CalculatePastReturn"
        #"CalculateTaLibSTOCH"
        #"CalculateTaLibSTOCHF"
        #"CalculateTaLibTRIX"
        #"CalculateTaLibULTOSC"
    #]
}
FlowConfiguration {
    snapshot_location = "C:/DCM/temp/pipeline_tests/tiaa_test"
    base_configuration_filepath = "../configuration/market_view_calibration_pipeline.conf"
    base_configuration_overrides {}
    use_existing_cache_for_stages = [*]
        calibration_mode_overrides {
        }

        test_mode_overrides {
            FlowConfiguration {
                    snapshot_location = "./test/test_run_cache"
                }
                StepsConfiguration {
                }
        }

}
StepsConfiguration {
    S3SecurityMasterReader {
        bucket = "dcm-data-temp"
        key = "jack/security_master.csv"
    }
    S3IndustryMappingReader {
        bucket = "dcm-data-temp"
        key = "jack/industry_map.csv"
    }
    S3RawQuandlDataReader {
        bucket = "dcm-data-temp"
        key = "jack/SHARADAR_SF1.csv"
    }
    SQLMinuteToDailyEquityPrices {
    }
    TimelinePermutator {
        permutation_enabled = False
                timeline_segmenter_function_names = null 
                random_seed = 12345
                permute_day_at_lowest_segment = True
    }
    CalibrationDatesJump {
        cache_file: "../configuration/intervals_for_jump_short.csv"
        target_dt: "2019-06-28"
        intervals_start_dt: "2018-01-01"
        intervals_end_dt: "2019-06-28"
        holding_period_in_trading_days: 1
        force_recalculation: True
        save_intervals_to: null
    }
    QuandlDataCleanup {
    }
    CalculateDerivedQuandlFeatures {
    }
    CalculateTargetReturns {
        return_column = close
        periods = [1, 5, 10, 21, 42]
        winsorize_alpha = 0.005
    }
    CalculateTaLibPPOMultiParam {
        configs = [
        {
            technical_indicator_params: {fastperiod: 3, slowperiod: 14, matype: 0}
            price_column: close
            invert_sign: True
        },
        {
            technical_indicator_params: {fastperiod: 12, slowperiod: 26, matype: 0}
            price_column: close
            invert_sign: True
        },
        {
            technical_indicator_params: {fastperiod: 21, slowperiod: 126, matype: 0}
            price_column: close
            invert_sign: True
        }
        ]
    }
    CalculateTaLibADXMultiParam {
        configs = [
        {
            technical_indicator: talib.ADX 
            technical_indicator_params: {timeperiod: 5}
            smoothing_period: 3
        },
        {
            technical_indicator: talib.ADX 
            technical_indicator_params: {timeperiod: 14}
            smoothing_period: 3
        },
        {
            technical_indicator: talib.ADX 
            technical_indicator_params: {timeperiod: 63}
            smoothing_period: 3
        }
        ]
    }
    CalculateTaLibWILLRMultiParam {
        configs = [
        {
            technical_indicator_params: {timeperiod: 5} 
            smoothing_period: 3
        },
        {
            technical_indicator_params: {timeperiod: 14} 
            smoothing_period: 3
        },
        {
            technical_indicator_params: {timeperiod: 63} 
            smoothing_period: 3
        }
        ]
    }
    CalculateVolatilityMultiParam {
        configs = [
        {
                volatility_lookback = 21
                price_column = close
        },
        {
                volatility_lookback = 63
                price_column = close
        },
        {
                volatility_lookback = 126
                price_column = close
        },
        ]
    }
    CalculateTaLibSTOCHRSIMultiParam {
        configs = [
        {
            technical_indicator_params: {timeperiod: 14, fastk_period: 5, fastd_period: 3, fastd_matype: 0}
            price_column: close
        },        
        {
            technical_indicator_params: {timeperiod: 30, fastk_period: 10, fastd_period: 5, fastd_matype: 0}
            price_column: close
        },
        {
            technical_indicator_params: {timeperiod: 63, fastk_period: 15, fastd_period: 10, fastd_matype: 0}
            price_column: close
        },
        ]
    }

}