Flow {
    DataPull = [
        "TimelinePermutator"
        "SQLReaderPriceData"
        "SQLReaderDailyIndexData"
        "CalibrationDatesJump"
    ]
    DerivedDataProcessing_1 = [
        "ComputeBeta"
        "CalculateVolatility"
        #"CalculateVolatilityShort"
        #"CalculateVolatilityLong"
        "CalculateMACD"
        "CalcualteCorrelation"
        "CalculateDollarVolume"
        "CalculateOvernightReturn"
        "CalculatePastReturn"
        "CalculateTaLibPPO"
        #"CalculateTaLibPPOShort"
        #"CalculateTaLibPPOLong"
        "CalculateTaLibSTOCH"
        "CalculateTaLibSTOCHRSI"
        "CalculateTaLibSTOCHF"
        "CalculateTaLibTRIX"
        "CalculateTaLibULTOSC"
        "CalculateTaLibADX"
        #"CalculateTaLibADXShort"
        #"CalculateTaLibADXLong"
        "CalculateTaLibWILLR"
        #"CalculateTaLibWILLRShort"
        #"CalculateTaLibWILLRLong"
        #"ComputeIdioVol"
        #"CalculateFutureReturn"
    ]
}
FlowConfiguration {
    snapshot_location = "C:/DCM/temp/pipeline_tests/tiaa_clean"
    base_configuration_filepath = "../configuration/market_view_calibration_pipeline.conf"
    base_configuration_overrides {}
    use_existing_cache_for_stages = [*]
        calibration_mode_overrides {
        }

        test_mode_overrides {
            FlowConfiguration {
                    snapshot_location = "./test/test_run_cache"
                }
                StepsConfiguration {
                }
        }

}
StepsConfiguration {
    TimelinePermutator {
        permutation_enabled = False
                timeline_segmenter_function_names = null 
                random_seed = 12345
                permute_day_at_lowest_segment = True
    }
    SQLReaderPriceData {
        table_name = "daily_equity_prices"
        price_limit_filters = {open:[0, 1000000], close:[0, 100000]}
    }
    SQLReaderDailyIndexData {
        table_name = "daily_index"
        index_names = ["SPX"]
    }
    CalibrationDatesJump {
        cache_file: "../configuration/intervals_for_jump_short.csv"
        target_dt: "2019-06-28"
        intervals_start_dt: "2001-01-01"
        intervals_end_dt: "2019-06-28"
        holding_period_in_trading_days: 1
        force_recalculation: True
        save_intervals_to: null
    }
    CalculateVolatility: {
                volatility_lookback = 63
                price_column = close
    }
    #CalculateVolatilityShort: {
                #volatility_lookback = 21
                #price_column = close
    #}
    #CalculateVolatilityLong: {
                #volatility_lookback = 126
                #price_column = close
    #}
    CalculateMACD: {
        technical_indicator = macd,
            technical_indicator_params = {nslow:26, nfast:12},
            smoothing_period = 3,
            price_column = close
    }
    CalcualteCorrelation {
        benchmark_names = [8554]
            correlation_lookback = 126
            price_column = open
    }
    CalculateDollarVolume {
        lookback_periods = 21
    }
    CalculateOvernightReturn {}
    CalculatePastReturn {
        column : close
        lookback_list : [1, 2, 5, 10, 21, 63, 126, 252]
    }
    CalculateTaLibPPO {
        technical_indicator_params: {fastperiod: 12, slowperiod: 26, matype: 0}
        price_column: close
        invert_sign: True
    }
    #CalculateTaLibPPOShort {
        #technical_indicator_params: {fastperiod: 3, slowperiod: 14, matype: 0}
        #price_column: close
        #invert_sign: True
    #}
    #CalculateTaLibPPOLong {
        #technical_indicator_params: {fastperiod: 21, slowperiod: 126, matype: 0}
        #price_column: close
        #invert_sign: True
    #}
    CalculateTaLibSTOCHRSI {
        technical_indicator_params: {timeperiod: 14, fastk_period: 5, fastd_period: 3, fastd_matype: 0}
        price_column: close
    }
    CalculateTaLibSTOCH {
        technical_indicator_params = {fastk_period: 5, slowk_period: 3, slowk_matype: 0, slowd_period: 3, slowd_matype: 0}
    }
    CalculateTaLibSTOCHF {
        technical_indicator_params: {fastk_period: 5, fastd_period: 3, fastd_matype: 0}
    }
    CalculateTaLibTRIX {
        technical_indicator_params: {timeperiod: 30}
        price_column: close
    }
    CalculateTaLibULTOSC {
        technical_indicator_params: {timeperiod1: 7, timeperiod2: 14, timeperiod3: 28}
        smoothing_period: 3
    }
    CalculateTaLibADX {
        technical_indicator: talib.ADX 
        technical_indicator_params: {timeperiod: 14}
        smoothing_period: 3
    }
    #CalculateTaLibADXShort {
        #technical_indicator: talib.ADX 
        #technical_indicator_params: {timeperiod: 5}
        #smoothing_period: 3
    #}
    #CalculateTaLibADXLong {
        #technical_indicator: talib.ADX 
        #technical_indicator_params: {timeperiod: 63}
        #smoothing_period: 3
    #}
    CalculateTaLibWILLR {
        technical_indicator_params: {timeperiod: 14} 
        smoothing_period: 3
    }
    #CalculateTaLibWILLRShort {
        #technical_indicator_params: {timeperiod: 5} 
        #smoothing_period: 3
    #}
    #CalculateTaLibWILLRLong {
        #technical_indicator_params: {timeperiod: 63} 
        #smoothing_period: 3
    #}
    ComputeBeta: {
                benchmark_names = [8554]
                beta_lookback = 63
                offset_unit = B
                price_column = close
                dropna_pctg = 0.15
                use_robust = False
                epsilon = 1.35
                alpha = 0.0001
                fit_intercept = False
        }
    #CalculateFutureReturn {
        #column : close
        #lookback_list : [1, 2, 5, 10, 21, 42, 63]
    #}
}