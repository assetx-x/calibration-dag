run_description.run_name = ${?PLATFORM_MODELS_RUN_NAME}

SubscriptionsDataIO {
   gmu_instructions_models = gs://${?GOOGLE_PROJECT_ID}-us-dcm-subscribers-data/gmu_instructions/models/
   gmu_instructions_subscriptions = gs://${?GOOGLE_PROJECT_ID}-us-dcm-subscribers-data/gmu_instructions/subscriptions
}

DataProvider.RedshiftRavenPackDataProvider {
  redshift_user = dcm_dev
  redshift_user = ${?REDSHIFT_USER}
  redshift_pwd = pwd
  redshift_pwd = ${?REDSHIFT_PWD}
  redshift_endpoint = marketdata-test.cq0v4ljf3cuw.us-east-1.redshift.amazonaws.com
  redshift_port = 5439
  db_name = dev
  redshift_credentials = ${DataProvider.RedshiftRavenPackDataProvider.redshift_user}:${DataProvider.RedshiftRavenPackDataProvider.redshift_pwd}
  redshift_service = ${DataProvider.RedshiftRavenPackDataProvider.redshift_endpoint}:${DataProvider.RedshiftRavenPackDataProvider.redshift_port}
  redshift_uri = "redshift+psycopg2://"${DataProvider.RedshiftRavenPackDataProvider.redshift_credentials}@${DataProvider.RedshiftRavenPackDataProvider.redshift_service}/${DataProvider.RedshiftRavenPackDataProvider.db_name}
}

logging {
	log_all_system_messages = False
	config_filename = backtesting_logging.py
	config_location = C:/DCM/dcm-intuition/processes/data_processing/commonlib/configs
	logging_location = C:/DCM/dcm-intuition/strategies/cointegration/logs/${run_description.run_name}/
}

IntuitionSetup.state_dir = ${logging.logging_location}/../../recovery_backups/${run_description.run_name}
IntuitionSetup.publish_state = true
IntuitionSetup.publish_state_media = GCS
IntuitionSetup.bucket = ${?GOOGLE_PROJECT_ID}-us-dcm-data-temp
IntuitionSetup.data_location_prefix = state_saving/models



trade_publishing {
  enabled = true
  collect_metadata = true
  publishing_type = kafka # internal_comm_channel, no_op
  publisher_topic_prefix = ${run_description.run_name}
  kafka {
      kafka_bootstrap = [broker-1.msk:9092, broker-2.msk:9092]
      sasl_plain_username = ""
      sasl_plain_password = ""
      ssl_cafile = ""
      ssl_certfile = ""
      ssl_keyfile = ""

      kafka_bootstrap = ${?KAFKA_BOOTSTRAP}
      sasl_plain_username = ${?KAFKA_SASL_PLAIN_USERNAME}
      sasl_plain_password = ${?KAFKA_SASL_PLAIN_PASSWORD}
      ssl_cafile = ${?KAFKA_SSL_CAFILE}
      ssl_certfile = ${?KAFKA_SSL_CERTFILE}
      ssl_keyfile = ${?KAFKA_SSL_KEYFILE}
  }
  internal_comm_channel {}
}

DataProvider.HistoricalEquityDataProvider {
  redshift_uri = ${DataProvider.RedshiftRavenPackDataProvider.redshift_uri}
}

IntuitionSetup {
    save_state_in_backtesting = False,
    TradingUnits {
    }
}

DataServicesUnit {
    providers_configuration {
	Equities = [HistoricalEquityDataProvider, IBEquitiesDataProvider]
	EquityAdjustmentFactors = [HistoricalEquityAdjustmentFactorDataProvider]
	Indices = [IBIndexDataProvider]
	DailyFutures = [HistoricalDailyFuturesDataProvider]
	DailyIndices = [HistoricalDailyIndexDataProvider]
	DailyEquities = [HistoricalDailyEquityDataProvider]
	Sentiment = [HistoricalRedshiftRavenPackDataProvider, RealtimeRavenPackDataProvider]
    }
}

ExecutionCoordinator {
 execution_styles_to_expert_map {
    OrderedAllOrNone = OrderedAllOrNoneWithCancellationExecutionExpert
	RebalanceVWAP = VWAPExecutionExpert
    HedgeCombo = VWAPExecutionExpert
    MarketTimeLimit = MarketTimeLimitExecutionExpert
	LimitOrder = MarketTimeLimitExecutionExpert
    #AdaptiveAlgo = AdaptiveExecutionExpert
 }
 default_execution_style = RebalanceVWAP
}

  IntuitionSetup {
	GlobalManagementUnit {
	  configuration_location = ${SubscriptionsDataIO.gmu_instructions_models}
	}
  }


corporate_actions.adjust_trading_books_for_corporate_actions = true
corporate_actions.verify_corporate_actions_with_user = true
GlobalManagementUnit.confirm_instruction_fetching_with_user = true


BrokerConnectionIB.check_trading_limits = false

#### Remove the next lines to work on Windows
logging.config_location = /home/dcmadmin/dcm-intuition/processes/data_processing/commonlib/configs
logging.logging_location = /home/dcmadmin/intuition_logs/logs/${run_description.run_name}/
