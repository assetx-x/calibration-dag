wFlow {
    DataPull = [
        "TimelinePermutator"
        "CalibrationDatesMarketViews"
        "SQLReaderPriceData"
        "SQLReaderFundamentalData"
        "SQLReaderFundamentalDataQuandl"
        "SQLReaderRavenpackMomentumIndicator"
        "SQLReaderRavenpackOvernightVolume"
        "SQLReaderETFInformation"
        "SQLReaderEarningsDates"
        "SQLReaderSectorBenchmarkMap"
        "SQLReaderDailyIndexData"
    ]
    DerivedDataProcessing = [
        "TransposeFundamentalsQuandl"
        "CalculateOvernightReturn"
        "CalcualteQuarterlyReturn"
        "CalculatePastReturn"
        "CalcualteCorrelation"
        "CalculateTechnicalIndicator"
        "CalculateEarningsDatesBlocks"
        "CalculatePerformanceReturnOnIntervals"
        "CalculateVXXReturn"
        "CalculateDollarVolume"
        "CalculateSPYPeerRank"
        "CalculateTechnicalIndicatorComparisons"
    ]
    DataConsolidation = [
        "MergeAllData"
        "Digitization"
    ]
    RuleApplication = [
        "RulesReader"
        "RuleApplications"
    ]
    AssetWeighting = [
        "SpyViewWeakRiskOnRegimeWeighting"
        "SpyViewStrongRiskOnRegimeWeighting"
        "SpyViewWeakRiskOffRegimeWeighting"
        "SpyViewStrongRiskOffRegimeWeighting"
        "NeutralMarketRegimeWeighting"
        "NeutralVolRegimeWeighting"
        "RisingVolRegimeWeighting"
        "FallingVolRegimeWeighting"
    ]
    MarketViewCalibration = [
        "IndividualWeightsConsolidation"
        "ViewClassesFormation"
        "ViewsInMarketTraderCalibration"
        "ViewsInMarketSupervisorCalibration"
        "ViewsInMarketFullCalibration"
    ]
    #PerformanceReport = [
    #    "CalibrationPerformanceReport"
    #]
}
FlowConfiguration {
    snapshot_location = "C:/DCM/temp/pipeline_tests/market_views"
    base_configuration_filepath = "../configuration/market_view_calibration_pipeline.conf"
    base_configuration_overrides {}
    use_existing_cache_for_stages = [*]
        calibration_mode_overrides {
            StepsConfiguration {
                    ViewsInMarketFullCalibration : {
                            calibration_location = "s3://dcm-production-processes/calibrations/views_in_market_trading/"
                           file_suffix = vol_views.csv
                           ignore_calibration_timeline = False
                        }
                }
        }
        test_mode_overrides {
            FlowConfiguration {
                    use_existing_cache_for_stages = []
                        snapshot_location =  "./test/test_run_cache"
                }
                StepsConfiguration {
                    CalibrationDatesMarketViews {
                                intervals_view_filter: [spy_view]
                                cache_file = "../configuration/intervals_mv_unit_test.csv"
                                signal_asset_ticker_map = {
                                    spy_view: {Long: SPY, Short: TLT}, vol_view: {Long: VXX, Short: XIV}
                                }
                                target_dt = "2018-11-30"
                                market_start_date: "2018-04-01"
                                market_end_date: "2018-11-30"
                                force_recalculation = False
                                save_intervals_to = null
                            }
                }
        }
}
StepsConfiguration {
    TimelinePermutator {
        permutation_enabled = False
                timeline_segmenter_function_names = null
                random_seed = 12345
                permute_day_at_lowest_segment = True
    }
    CalibrationDatesMarketViews {
        intervals_view_filter: [spy_view]
        cache_file = "../configuration/intervals_as_of_20181218.csv"
        signal_asset_ticker_map = {
            spy_view: {Long: SPY, Short: TLT}, vol_view: {Long: VXX, Short: XIV}
        }
        force_recalculation = True
        save_intervals_to = null
        target_dt = "2019-01-04"
        view_module_locations: "views_in_market_trading.py"
        quick_simulator_module_location: "quick_simulator_market_io.py"
        quick_simulator_class_name: "create_market_from_data_requirements"
        views_definition: {spy_view: {
            view_function_params = {
                                    numerator_security: VIX,
                                        epsilon: 0.015,
                                        ivts_median_thresh: 1.12,
                                        denominator_security: VXST,
                                        look_back_for_mean_in_days: 10
                                }
                                view_signal_class_name = ViewInMarketSignal_RiskOnOff5Regimes
                                wealth_percentage = 1.0
                                jump_parameters_for_filtering_per_view_value: {1:[-0.015, -0.002], 2:[-0.015, -0.002]}
                                view_assets: market_assets
        }}
        time_in_day_to_evaluate_signal: "09:31:00"
        market_start_date: "2017-01-15"
        market_end_date: "2018-12-31"
        views_filter: null
    }
    SQLReaderPriceData {
        table_name = "daily_equity_prices"
        price_limit_filters = {open:[0, 1000000], close:[0, 100000]}
    }

    SQLReaderFundamentalData {
        table_name = "fundamentals_short_digitized"
        date_column = "date"
    }
    SQLReaderFundamentalDataQuandl {
        table_name = "fundamental_data"
        date_column = "as_of_start"
    }
    SQLReaderRavenpackMomentumIndicator {
        ndays_slow = 91
                ndays_fast = 28
    }
    SQLReaderRavenpackOvernightVolume {}
    SQLReaderETFInformation {}
    SQLReaderEarningsDates {}
    SQLReaderSectorBenchmarkMap {}
    SQLReaderDailyIndexData {
        table_name = "daily_index"
        index_names = ["SPX", "PPUT", "CMBO", "BFLY", "RXM", "VIX", "VXST", "VXMT", "VIX3M"]
    }

    TransposeFundamentalsQuandl {
            concept_filter = [marketcap]
        }
        CalculateOvernightReturn {}
    CalcualteQuarterlyReturn {}
    CalculatePastReturn: {
            column : close
                lookback_list : [20, 60, 125, 252]
        }
        CalcualteCorrelation {
            benchmark_names = ["SPY"]
                #benchmark_names = ["SPY", "VWO", "TLT", "GSG", "GLD"]
                correlation_lookback = 63
                price_column = open
        }
        CalculateTechnicalIndicator {
            technical_indicator = price_oscillator,
                technical_indicator_params = {nslow: 26, nfast: 12},
                price_column = close,
                calculate_indicator_ranking =True
        }
        CalculateEarningsDatesBlocks {
            block_previous = 3B
                block_after = 5B
        }
        CalculatePerformanceReturnOnIntervals {
            addtive_tc = 0.01
                slippage_pct = 0.001
        }
        CalculateVXXReturn {
            lookback_periods = 7
                price_concept = close
        }
        CalculateDollarVolume {
            lookback_periods = 10
        }
        CalculateSPYPeerRank {
            peer_tickers = [DIA, DVY, IJH, IJJ, IJK, IJR, IVE, IVV, IVW, IWB, IWD, IWM, IWN, IWO, IWR, IWV, MDY, RSP, SCHA, SPY, VTI, VTV, VV]
        }
        CalculateTechnicalIndicatorComparisons {
            pairs_to_compare = {DVY_VCIT: [DVY, VCIT], IWO_IJR: [IWO, IJR], SPY_EEM: [SPY, EEM], SPY_IWN: [SPY, IWN]}
        }
        MergeAllData {
            slippage_pct = null
                addtive_tc = null
                ranking_benchmarks = [DIA, DVY, IJH, IJJ, IJK, IJR, IVE, IVV, IVW, IWB, IWD, IWM, IWN, IWO, IWR, IWV, MDY, RSP, SCHA, SPY, VTI, VTV, VV]
                sector_benchmarks = [XLI, XLV, XLF, XLK, XLY, XLE, VDC, XLB, XLU]
                other_benchmarks = [TLT, RSP, EEM, ACWI]
        }
        Digitization {
            digitization_description = {
                    tech_indicators_per_date: {
                            columns = [indicator, SPY_correl]
                                quantiles = [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0]
                                group_by = [entry_date]
                                suffix = _date
                                },
                        past_quarters_performance_per_sector_date: {
                            columns = [q1, q2, q3, q4]
                                quantiles = [0.0, 0.05, 0.10, 0.20, 0.5, 0.80, 0.90, 0.95, 1.0]
                                group_by = [sector, entry_date]
                                suffix = _sector_date
                                },
                        past_quarters_performance_per_date: {
                            columns = [q1, q2, q3, q4]
                                quantiles = [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0]
                                group_by = [entry_date]
                                suffix = _date
                        }
                }
        }
        RulesReader {
            rule_set = null
        ruleset_location = [".", "features_rules", "*.conf"]
        }
        RuleApplications {
            block_rules = null
        rule_organization_level = 2
                include_runtime_filters = false
        }
        SpyViewWeakRiskOnRegimeWeighting: {
            total_weight = 0.0
                volume_weighting = false
        }
        SpyViewStrongRiskOnRegimeWeighting: {
            total_weight = 1.0
                volume_weighting = false
        }
        SpyViewWeakRiskOffRegimeWeighting: {
            total_weight = 0.1
                volume_weighting = false
        }
        SpyViewStrongRiskOffRegimeWeighting: {
            total_weight = 0.65
                volume_weighting = false
        }
        NeutralMarketRegimeWeighting {}
    NeutralVolRegimeWeighting {}
    RisingVolRegimeWeighting {
            total_weight = 1.0
        }
        FallingVolRegimeWeighting {
            total_weight = 1.0
        }
        IndividualWeightsConsolidation {}
    ViewClassesFormation: {
            traders {
                    ViewClassesFormation {
                            spy_view {
                                    view_function_params = {
                                            numerator_security: VIX,
                                                epsilon: 0.015,
                                                ivts_median_thresh: 1.12,
                                                denominator_security: VXST,
                                                look_back_for_mean_in_days: 10
                                        }
                                        view_signal_class_name = ViewInMarketSignal_RiskOnOff5Regimes
                                        wealth_percentage = 1.0
                                        jump_parameters_for_filtering_per_view_value: {1:[-0.015, -0.002], 2:[-0.015, -0.002]}
                                        view_assets: market_assets
                                }
                                vol_view {
                                    view_function_params: {
                                            leverage_ratio: 1.5,
                                                inverse_contango_weight: 0.7,
                                                significant_change_threshold: 0.08,
                                        }
                                        view_signal_class_name = ViewInMarketVolatilityBruteForce
                                        wealth_percentage = 0.15
                                        view_assets: vol_assets
                                }
                        }
                        MarketViewNewTrader_VolOnly = {
                            vol_view {
                                    view_signal_class_name = ViewInMarketVXX_XIV
                                        wealth_percentage = 0.0
                                        view_assets: vol_assets
                                        view_function_params: {
                                            contango_lower_limit: -0.005,
                                                xiv_entry_vix_lower_limit: 12.0,
                                                xiv_contango_return_lower_limit: -2.0,
                                                vxx_entry_vxst_lower_limit: 10,
                                                contango_upper_limit: 0.08,
                                                xiv_v2_v1_limit: 1.066,
                                                xiv_entry_vix_upper_limit: 100,
                                                vix_v1_ratio_upper_limit: 1.3,
                                                vol_thresh: 0.12,
                                                corr_thresh: -0.2,
                                                vix_v1_ratio_lower_limit: 1.07,
                                                vxx_v2_v1_limit: 0.9
                                        }
                                }
                        }
                }
        }
        ViewsInMarketTraderCalibration {
            traders = {
                    MarketViewNewTrader_20181226 = {
                            trader_fields: {
                                    ranking: 1
                                        rebalancing_time: "09:31:00"
                                        rebalancing_frequency: 1B
                                        stop_limits_pct: "(-0.4, 100.0)"
                                        basket_selloff_date: 2019-12-15
                                        trader_capital: 12100000
                                }
                                views: [spy_view]
                        }
                        #MarketViewNewTrader_VolOnly = {
                        #trader_fields: {
                                #ranking: 1
                                        #rebalancing_time: "09:31:00"
                                        #rebalancing_frequency: 1B
                                        #stop_limits_pct: "(-0.4, 100.0)"
                                        #basket_selloff_date: 2018-12-15
                                        #trader_capital: 500000
                                        #}
                                #views: [vol_view]
                                #}
                }
        }
        ViewsInMarketSupervisorCalibration : {
            supervisor_config {
                    SUP: {
                            supervisor_fields: {
                                    funding_buffer: 200000
                                        fundingRequestsAmount: 12100000
                                        total_funding: 30000000
                                }
                        }
                }
        }
        ViewsInMarketFullCalibration : {
            calibration_location = "C:/DCM/temp/"
           file_suffix = vol_views_historical.csv
           ignore_calibration_timeline = True
           calibration_date_offset = null
           calibration_anchor_date = null
        }
        #CalibrationPerformanceReport: {
        #	views_regimes_to_report = {spy_view: [-2, -1, 1, 2]}
        #	report_location = "C:/DCM/temp/volviews_verification_real/"
        #	#s3_report_location = "s3://dcm-data-test/fluder/overnight/calibrations/market_views/live/"
        #	summary_by_date_suffix = summary_by_date.csv
        #	time_summary_stats_suffix = time_summary_stats.csv
        #	full_period_stats_suffix = all_period_results.csv
        #}
}