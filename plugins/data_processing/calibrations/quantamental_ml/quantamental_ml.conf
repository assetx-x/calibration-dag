Flow {
    DataPull = [
        "SQLSecurityMasterReader"
        "SQLIndustryMappingReader"
        "S3RussellComponentReader"
        "S3RawQuandlDataReader"
        "SQLMinuteToDailyEquityPrices"
        "TimelinePermutator"
        "CalibrationDatesJump"
    ]
    DerivedFundamentalDataProcessing = [
        "QuandlDataCleanup"
        "CalculateDerivedQuandlFeatures"
        "CalculateTargetReturns"
    ]
    DerivedTechnicalDataProcessing = [
        "CalculateTaLibSTOCHRSIMultiParam"
        "CalculateVolatilityMultiParam"
        "CalculateTaLibWILLRMultiParam"
        "CalculateTaLibPPOMultiParam"
        "CalculateTaLibADXMultiParam"
    ]
    DerivedSimplePriceFeatureProcessing = [
        "ComputeBetaQuantamental"
        "CalculateMACD"
        "CalcualteCorrelation"
        "CalculateDollarVolume"
        "CalculateOvernightReturn"
        "CalculatePastReturnEquity"
        "CalculateTaLibSTOCH"
        "CalculateTaLibSTOCHF"
        "CalculateTaLibTRIX"
        "CalculateTaLibULTOSC"
    ]
    MergeStep = [
        "QuantamentalMerge"
    ]
    FilterData = [
        "FilterMonthlyDatesFullPopulation"
        "FilterRussell1000"
    ]
    NeutralizeFeatures = [
        "FactorNeutralization"
        "FactorStandardizationNeutralized"
    ]
}
FlowConfiguration {
    snapshot_location = "C:/DCM/temp/pipeline_tests/tiaa_test"
    base_configuration_filepath = "../configuration/market_view_calibration_pipeline.conf"
    base_configuration_overrides {}
    use_existing_cache_for_stages = [*]
        calibration_mode_overrides {
        }

        test_mode_overrides {
            FlowConfiguration {
                    snapshot_location = "./test/test_run_cache"
                }
                StepsConfiguration {
                CalibrationDatesJump {
                    cache_file = "../configuration/calibration_dates_compare.csv"
                    target_dt = "2018-11-30"
                    intervals_start_dt = "2017-08-18"
                    intervals_end_dt = "2018-11-30"
                    force_recalculation = True
                    save_intervals_to = null
                }

                }
        }

}
StepsConfiguration {
    SQLSecurityMasterReader {
    }
    SQLIndustryMappingReader {
    }
    S3RussellComponentReader {
        bucket = "dcm-data-temp"
        r3k_key = "jack/r3k.csv"
        r1k_key = "jack/r1k.csv"
    }
    S3RawQuandlDataReader {
        bucket = "dcm-data-temp"
        key = "jack/SHARADAR_SF1.csv"
    }
    SQLMinuteToDailyEquityPrices {
    }
    TimelinePermutator {
        permutation_enabled = False
                timeline_segmenter_function_names = null 
                random_seed = 12345
                permute_day_at_lowest_segment = True
    }
    CalibrationDatesJump {
        cache_file: "../configuration/intervals_for_jump_short.csv"
        target_dt: "2019-06-28"
        intervals_start_dt: "2018-01-01"
        intervals_end_dt: "2019-06-28"
        holding_period_in_trading_days: 1
        force_recalculation: True
        save_intervals_to: null
    }
    QuandlDataCleanup {
    }
    CalculateDerivedQuandlFeatures {
    }
    CalculateTargetReturns {
        return_column = close
        periods = [1, 5, 10, 21, 42]
        winsorize_alpha = 0.005
    }
    CalculateTaLibPPOMultiParam {
        configs = [
        {
            technical_indicator_params: {fastperiod: 3, slowperiod: 14, matype: 0}
            price_column: close
            invert_sign: True
        },
        {
            technical_indicator_params: {fastperiod: 12, slowperiod: 26, matype: 0}
            price_column: close
            invert_sign: True
        },
        {
            technical_indicator_params: {fastperiod: 21, slowperiod: 126, matype: 0}
            price_column: close
            invert_sign: True
        }
        ]
    }
    CalculateTaLibADXMultiParam {
        configs = [
        {
            technical_indicator: talib.ADX 
            technical_indicator_params: {timeperiod: 5}
            smoothing_period: 3
        },
        {
            technical_indicator: talib.ADX 
            technical_indicator_params: {timeperiod: 14}
            smoothing_period: 3
        },
        {
            technical_indicator: talib.ADX 
            technical_indicator_params: {timeperiod: 63}
            smoothing_period: 3
        }
        ]
    }
    CalculateTaLibWILLRMultiParam {
        configs = [
        {
            technical_indicator_params: {timeperiod: 5} 
            smoothing_period: 3
        },
        {
            technical_indicator_params: {timeperiod: 14} 
            smoothing_period: 3
        },
        {
            technical_indicator_params: {timeperiod: 63} 
            smoothing_period: 3
        }
        ]
    }
    CalculateVolatilityMultiParam {
        configs = [
        {
                volatility_lookback = 21
                price_column = close
        },
        {
                volatility_lookback = 63
                price_column = close
        },
        {
                volatility_lookback = 126
                price_column = close
        },
        ]
    }
    CalculateTaLibSTOCHRSIMultiParam {
        configs = [
        {
            technical_indicator_params: {timeperiod: 14, fastk_period: 5, fastd_period: 3, fastd_matype: 0}
            price_column: close
        },        
        {
            technical_indicator_params: {timeperiod: 30, fastk_period: 10, fastd_period: 5, fastd_matype: 0}
            price_column: close
        },
        {
            technical_indicator_params: {timeperiod: 63, fastk_period: 15, fastd_period: 10, fastd_matype: 0}
            price_column: close
        },
        ]
    }
    CalculateMACD: {
        technical_indicator = macd,
            technical_indicator_params = {nslow:26, nfast:12},
            smoothing_period = 3,
            price_column = close
    }
    CalcualteCorrelation {
        benchmark_names = [8554]
            correlation_lookback = 126
            price_column = open
    }
    CalculateDollarVolume {
        lookback_periods = 21
    }
    CalculateOvernightReturn {}
    CalculatePastReturnEquity {
        column : close
        lookback_list : [1, 2, 5, 10, 21, 63, 126, 252]
    }
    CalculateTaLibSTOCH {
        technical_indicator_params = {fastk_period: 5, slowk_period: 3, slowk_matype: 0, slowd_period: 3, slowd_matype: 0}
    }
    CalculateTaLibSTOCHF {
        technical_indicator_params: {fastk_period: 5, fastd_period: 3, fastd_matype: 0}
    }
    CalculateTaLibTRIX {
        technical_indicator_params: {timeperiod: 30}
        price_column: close
    }
    CalculateTaLibULTOSC {
        technical_indicator_params: {timeperiod1: 7, timeperiod2: 14, timeperiod3: 28}
        smoothing_period: 3
    }
    ComputeBetaQuantamental: {
        benchmark_names = [8554]
        beta_lookback = 63
        offset_unit = B
        price_column = close
        dropna_pctg = 0.15
        use_robust = False
        epsilon = 1.35
        alpha = 0.0001
        fit_intercept = False
    }
    QuantamentalMerge {
        apply_log_vol = True
        start_date = "2018-01-01"
        end_date = "2019-06-15"
    }
    FilterMonthlyDatesFullPopulation {
        start_date = "2018-01-01"
        end_date = "2019-05-15"
        mode = bme
    }
    FilterRussell1000 {
        mode = full
    }
    FactorNeutralization {
        factors: [SPY_beta, log_mktcap, ret_5B, ret_21B, volatility_63, volatility_126, momentum]
    }
    FactorStandardizationNeutralized {
        all_features: [divyield, WILLR_14_MA_3, macd, log_dollar_volume, bm, retvol, netmargin, ADX_5_MA_3, ret_252B,
                       ps, ULTOSC_7_14_28_MA_3, maxret, shareswa_growth, ret_2B, ADX_63_MA_3, asset_growth, PPO_12_26,
                       macd_diff, ret_63B, ret_126B, pe, WILLR_63, debt2equity, chcsho, ADX_14, bm_ia_indgrp,
                       gp2assets, std_turn, WILLR_63_MA_3, STOCHRSI_FASTD_14_5_3, fcf_yield, sharey, WILLR_14,
                       macd_centerline, bm_ia_sector, dolvol, ADX_5, ebitda_to_ev, ret_10B, STOCHRSI_FASTK_14_5_3,
                       rel_to_high, TRIX_30, ret_1B]
        exclude_from_standardization: []
        target_columns: [future_ret_5B, future_ret_10B, future_ret_21B]
        suffixes_to_exclude = ["_std"]
    }
}